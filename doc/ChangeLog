==== 2.6.1 ====
    * Fix OpenAPI Core wrappers

==== 2.6.0 ====
    * Running on MS Windows fix
    * UTF-8 HTTP Digest username support
    * JSONResponse support all response type now (data argument)
    * EmptyResponse replaced by NoContentResponse
    * new NotModifiedResponse
    * time_to_http, datetime_to_http, http_to_datetime and http_to_time header
      functions for manipulating Date type headers
    * FileResponse generates Last-Modified header now
    * Response and FileObjResponse can be partial
    * JSONResponse Encoder arguments
    * Generator responses can be partial
    * Special PartialResponse class
    * Fix set_profile method
    * Fix logging messages

==== 2.5.0 ====
    * fix file callback on files smaller than 1000B
    * add FileObjResponse class
    * add BaseResponse class
    * unicode support in url path
    * call file_callback only for files entries (with filename)
    * fix openapi wrapper mime type
    * Session use JSON for secority issue
    * Bad JSON request generate HTTP Bad Request response
      * All error handlers has error named argument
    * new examples
      * large_file.py - own file_callback for uploading large data
      * websocket.py - websocket simple chat example
    * new TextResponse class
    * CachedInput for faster upload
    * Default Output data buffer is 65365 now
    * rename before_request to before_response
    * rename after_request to after_response
    * new start_time and end_time Request properties
    * new metrics example
    * input chunked encoding support
    * parse_json_request need bytes on input
    * add stalled file download timeout

==== 2.4.0 ====
    * new render_negotiation function
    * Headers improvement
    * error handlers support
    * permanent attribute for redirect and RedirectResponse is deprecated now,
      but status_code can be used
    * host port returns port from HOST or scheme
    * openapi wrapper binds request to Host or Forwarded header
    * new PoorSession interface
        * use secret_key instead of Request object in __init__ method
        * use load method for loading cookie
    * handler_from_before is called only once
    * fix FileResponse Content-Length header

==== 2.3.4 ====
    * new cgi.py interface fix

==== 2.3.3 ====
    * supported space in url with http digest
    * Request.construct_url improvement
    * fix inconsistent return statements
    * fix parsing empty form error and Request.has_body property
    * fix error when Request.__init__ failed

==== 2.3.2 ====
    * mypy support

==== 2.3.0 ====
    * Errors in parsing requests end with 500 Internal Server Error
    * JsonDict and JsonList objects for dict or list json request variant.
    * JSONGeneratorResponse to returns json from generators as generator.
    * Fixies for new openapi_core 0.13.0 version.
    * Better error log when error in after_request process
    * PoorSession cookie flags:
        * always HttpOnly attribute
        * Secure attribute by secure argument
        * SameSite attribute by same_site argument
        * Domain attribute by domain argument
        * Path attribute could be None
        * Max-Age attribute by max_age argument
    * SessionError when not possible to decode session
    * JSONResponse and JSONGeneratorResponse without charset
    * CORS and Security example for OpenAPI
    * EmptyResponse don't use headers warning
    * charset fix in make_response
    * some HTTP/0.9 suport fixes
    * JSONGeneratorResponse is defined as extras
    * OpenAPI tests fix - better openapi example
    * Request.hostname contains only hostname without port
    * Request.timestamp - set as soon as possible
    * empty FieldStorage did't raise exception
    * more info about request in internal server error page
    * Request path as right attribute for /path
    * Request full_path attribute for /path?query=arguments
    * HTTP Digest Authorization support

==== 2.2.0 ====
    * openapi after_request example fix
    * http_state and default decorator fix to chain usage
    * JSONResponse
    * 418 I'am a teapot state
    * SessionError exception based on RuntimeError
    * EmptyResponse fix

==== 2.1.1 ====
    * OpenAPIRequest host_url property fix
    * Native HTTP Errors fix
    * before_request called before all requests

==== 2.1.0 ====
    * FileResponse fix
    * Request.api property instead of Request.config, which is more unusable.

==== 2.0.1 ====
    * use wsgi.file_wrapper only for FileResponse

==== 2.0.0 ====
    * Python3 support only
    * Removed deprecated methods
    * Using python logging with 'poorwsgi' logger
    * poor_SecretKey is not set by default
    * Documentation rewrited to rst
    * Request is now input object only
        * `clength` property renamed to `content_length`
        * properties and attributes clean
        * document_root is property now
        * uri_rule contain original definition of regular rule
        * accept_* properties from headers
        * mime_type is stored in mime_type properties
        * * new `data` property, return full data from input buffer
        * (re)new `path_args` property
        * new configuration options `auto_data` and `data_size`

    * Response classes for output
        * not use buffer size
        * callable for use in application
        * new `data` property - could not work with generators
    Application
        * `pre_process` is `before_request` and `post_process` is
          `after_request`
        * file_callback application property
        * `before_request` handlers are called after path_args are set
        * `after_request` handler got response next to request
        * `after_request` handler *must* return response
        * internal renaming
        * documentation update
    * HTTPException instead of SERVER_RETURN
    * New abort function
    * New make_response function use internally for handlers return values
    * Some results are move to Response subclasses
    * PoorSession can write headers to Response, and no Request is need for that
    * Only DECLINED special return status_code are possible
    * internal parse_negotiation function
    * states and routes application property
    * Documentation update
    * New OpenAPIRequest and OpenAPIResponse classes based on classes from
      `openapi_core` module.

==== 1.7.0 ====
    * New Application config list form_content_types
    * Form is parsed only when content-type is one of form_content_types
    * Some PEP8 cleaning

==== 1.6.0 ====
    * Profiling rewrite
    * app and application is at poorwsgi module now (__init__.py)
    * Application name property
    * remove deprecated request.SERVER_RETURN
    * remove deprecated Request.add_common_vars
    * remove deprecated Request.subprocess_env
    * results rewrite and fix theis outputs
    * better hbytes as human bytes function
    * better html_escape
    * Application.debug, Application.document_root and
      Application.document_index
    * tests in separate directory
    * new Request is_body_request property
    * PEP8 code style
    * app and appplication is deprecated now
    * documentation fix for new jinja24doc
    * profiling bug fix (problem with Application class)
    * log_info method and encoding error message to ascci when is needed
    * syntax highlighting for example in readme
    * new hex filter
    * code refactoring
    * decode json with content type charset
    * new documentation for some methods and function
    * format python2.6 fix
    * using io.BytesIO insead of StringIO
    * log_info, log_debug and log_warning methods
    * fix circular reference (alias for self.method increment refcount)
    * Request.logger is deprecated now
    * send_json request function
    * new pop_route, pop_rroute, pop_http_state and pop_default methods
    * fix log_error in Application and Request to convert unicode to
      utf-8 string in python2.x
    * is_route and is_rroute methods
    * X-Forwarded-* headers support
    * debug output with navigation and some new request properties

==== 1.5.2 ====
    * Info about unstable branch

==== 1.5.1 ====
    * append missing cmp function when python3 is use
    * errors must be flushed
    * Broken client connection detection
    * move documentation to separate README.rst
    * moved to GitHub (fix links)

==== 1.5.0 ====
    * http response 304 Not Modified supported
    * new req.uri_hadler property
    * set req.uri_hadler and req.uri_rule before calling pre handlers, but after
      end point handler is known
    * new get_options and log_error methods of Application object
    * pre process handlers are run for http status handlers if not run yet
    * not implement error got http status code
    * bad request error page and error log on not implement method

==== 1.4.2 ====
    * bug fix when setting req.clength

==== 1.4.1 ====
    * append Secret Key about info to debug-info page
    * fix ini config examples - documentation can't be on same line as variable
    * fix menu links (diskusion and Facebook to PyPI)

==== 1.4.0 ====
    * fix version style to major.minor.maintenance

==== 1.0.4 ====
    * is_xhr bug fix
    * json POST|PUT|Patch request parsing
    * documentation fix
    * Request cookies and Session rewrite
    * html clear output in error traceback
    * included results have meta content tag
    * Reimplementation of Headers class (Python 3.4 support)

==== 1.0.3 ====
    * installation documentation fix
    * /debug-info handlers are separete
    * send_file result in main __init__.py

==== 1.0.2 ====
    * auto striping option keys and values
    * HTTP_FORBIDDEN bug fix (missing const)
    * Security update:
      * using sha512 in session hidden function
      * more uknown generic secret key
      * secret key is moved from debug-info html page to log where this page is
        shown
    * EmptyForm return default value

==== 1.0.1 ====
    * use pypi servers insead of sourceforge to download (doc)
    * adding viewport and desription to documentation html header
    * fix development status
    * unicode bug fix on debug-info page and with document_root
    * better rst description for pypi

==== 1.0.0 ====
    * Application class is smart singleton now (one instance for one name)
    * PoorSession have variable compressor module or object
    * Headers convert strings to ISO-8859-1 as RFC and PEP says
    * additional headers test in simple.py test
    * documentation updates and fixes

==== 0.9.8 (rc5) ====
    * automatic convert unicode to str for in header add method
    * uid, gid, euid and egid in debug-info

==== 0.9.7 (rc4) ====
    * documentation is build, install, and clean by extra commands
      build_html, install_html and clean_html

==== 0.9.6 (rc3) ====
    * python2.6 support (need ordereddict module)

==== 0.9.5 (rc2) ====
    * try call default handler if file not exist
    * SERVER_RETURN exception was moved to results module
    * Deprecated class SERVER_RETURN is child of right SERVER_RETURN
    * Regular expression routing
    * Simple example app
    * python 3.x support
    * form and args classes are set in request object by default
    * code cleaning
    * documentation update
    * ChangeLog is extra file in doc
    * Working field storage with files on python 2.x and python 3.x
    * auto_args, auto_form and other configuration of Application object
    * compatibility aliases for EmptyForm, Args and FieldStorage
    * using properties in Request and Application object

==== 0.9.1 (rc) ====
    * Profiler support for Application __call__ method
    * request_uri and some documentation update
    * do extensin in jinja24doc
    * up version of last bug fix
    * Request.referer variable
    * Bug fix
    * Documentation edit
    * Last part of main documentation
    * Part of documentation

==== 0.9 ====
    * redirect is possible when headers are fill, why not
    * Bug fix with raiseing errors
    * Document index bugfix
    * poorwsgi has it's own repository
    * some documentation fix
    * more then one pre and post handlers, some bugfixes ond documentations
    * Python package with setup.py
    * Import optimization
    * application is class instance now
    * Edit comment about PEP
    * Some bug fix and new Request member method_number
    * set functions for route, http_state and default, better pre-import
    * more methods support, better handlers working, lots of documentations
    * Library style
    * Some XXX comment - know bug
    * Default Python path from application
    * Change default buffer size to 16KiB
    * Some changes - obsolete, but commit before move to git
    * Python 3 pre-support, uWsgi server detection
    * http HEAD method supported

==== 20121130 ====
    * Webmaster mail bug fix
    * Logging bug fix
    * Poorwsgi could return files or directory index, so no dispatch_table.py
      could not be error
    * Poorhttp is simple wsgi server
    * rename http to phttp
    * Document Listing and get file support
    * users handler error calling
    * Bug fix
    * Environment fix
    * Flushing buffer bug fix
    * Some bug fix for run with uWsgi
    * Poorhttp is only wsgi server now.
    * And poorwsgi is python wsgi framework which coud be connect with anotger
      wsgi servers.
    * Method setreq is pre_process now.
    * Another post_process method is available.
    * Default handler as default_handler is available for other uri which is not
      in handlers list.
    * Read method for request in poorhttp.
    * Cookie bug fix with expire time and multiple cookie header support in
      poorhttp
    * fce support for getlist FieldStorage method
    * Directory listing, more compatible sendfile method and default it works
      html page.
    * Example is move to /app as default 'it works' example code.

==== 20120211 ====
    * File listing support as default handler for directory if new config
      option index is enabled.
    * Little bugfix with document config option.

==== 20111208 ====
    * convertor in FieldStorage
    * html error update
    * Doxygen support
    * example code
    * comments and documentation
    * bug fixes

==== 20100729 ====
    * apache compatibility
    * single / forking / thrading mode
    * bugfixing and error handlers captching and loging
    * more status codes

==== 20091130 ====
    * cookie session id is generate from expirydate by crypting
    * new method renew in cookie session

==== 20091126 ====
    * new configurable value server secret key added
    * new function hidden in session module for text crypting
    * handled config error exception
    * bug fix in loging
